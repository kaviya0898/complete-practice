package patterns;

import java.util.HashSet;
import java.util.Random;
import java.util.Stack;

public class Practices {
	
	public static void main(String[] args) {
		int array1[]= {1,2,3,6,9};
		int array2[]= {2,4,5,10};
		
		int result[]=mergeArray(array1,array2);
		for(int i=0;i<result.length;i++)
		{
			System.out.print(result[i]+",");
		}
		
		
	}

	private static int[] mergeArray(int[] array1, int[] array2) {
		int mergeArray[]=new int[array1.length+array2.length];
		int first=0,second=0,index=0;
		
		while(first<array1.length && second<array2.length)
		{
			if(array1[first]<array2[second])
			{
				mergeArray[index++]=array1[first++];
			}
			else if(array1[first]>array2[second])
			{
				mergeArray[index++]=array2[second++];
			}
			else
			{
				mergeArray[index++]=array1[first++];
				second++;
			}
		}
		
		while(first<array1.length)
		{
			mergeArray[index++]=array1[first++];
		}
		while(second<array2.length)
		{
			mergeArray[index++]=array2[second++];
		}
		int finalArray[]=new int[index];
		
		for(int i=0;i<index;i++)
		{
			finalArray[i]=mergeArray[i];
		}
		return finalArray;
//		int[] mergedArray = new int[array1.length + array2.length];
//        int i = 0, j = 0, k = 0;
//
//        while (i < array1.length && j < array2.length) {
//            if (array1[i] < array2[j]) {
//                mergedArray[k++] = array1[i++];
//            } else if (array1[i] > array2[j]) {
//                mergedArray[k++] = array2[j++];
//            } else {
//                mergedArray[k++] = array1[i++];
//                j++;
//            }
//        }
//
//        while (i < array1.length) {
//            mergedArray[k++] = array1[i++];
//        }
//
//        while (j < array2.length) {
//            mergedArray[k++] = array2[j++];
//        }
//
//        int[] finalArray = new int[k];
//        System.arraycopy(mergedArray, 0, finalArray, 0, k);
//
//        return finalArray;
    




	}

	
}
